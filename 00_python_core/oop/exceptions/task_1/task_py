class Pagination:
    def __init__(self, data, items_on_page):
        self.data = data
        self.items_on_page = items_on_page
        self.pages = [data[i:i+items_on_page] for i in range(0, len(data), items_on_page) ]

    @property
    def page_count(self, ):
        return len(self.pages)

    @property
    def item_count(self):
        return len(self.data)
    
    def count_items_on_page(self, page_number):
        if page_number < 0 or page_number >= len(self.pages):
            raise Exception("Invalid index. Page is missing.")
        return len(self.pages[page_number])

    def find_page(self, data):
        result = [index for index, page in enumerate(self.pages) if data in page]
        if not result: 
            raise Exception(f"'{data}' is missing on the pages")
        return result
    
    def display_page(self, page_number):
        if page_number < 0 or page_number >= len(self.pages):
            raise Exception("Invalid index. Page is missing.")
        return self.pages[page_number]